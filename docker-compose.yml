
services:
  api_gateway:
    build:
      context: ./API_Gateway
      dockerfile: Dockerfile
    container_name: api_gateway  
    ports:
      - "3000:3000"
    depends_on:
      - micro_auth
    networks:
      - api_network
    environment:
      - PORT=3000  

  micro_auth:
    build: 
      context: ./auth
      dockerfile: Dockerfile
    container_name: micro_auth  
    environment:
      - PORT=8080
      - SECRET_KEY=cdhedsuzfhuezhfuezhfuisdhafuaihndzsfahuiehfnuehfuizsdhfiueh
      - MONGO_URI=mongodb://mongo_auth/API_GATEWAY
    restart: always
    networks:
      - api_network
    depends_on: 
     - mongo_auth  

  micro_prdoduit:
    build: 
      context: ./micro_produits
      dockerfile: Dockerfile
    container_name: micro_produit  
    environment:
      - PORT=8082
      - MONGO_URI=mongodb://mongo_produit/API_GATEWAY
      - MONGO_SSL=false
    restart: always
    networks:
      - api_network
    depends_on: 
     - mongo_produit  
    develop:
      watch:
        - path: ./API_Gateway/
          target: /app/
          action: sync
        - path: ./API_Gateway/package.json
          action: rebuild
 


  mongo_auth:
    image: mongo:latest
    container_name: mongo_auth
    ports:
      - "27018:27017"
    networks:
      - api_network
    volumes:
      - mongodb_auth:/data/db
    develop:
      watch:
        - path: ./auth/
          target: /app/
          action: sync
        - path: ./auth/package.json
          action: rebuild  

  mongo_produit:
    image: mongo:latest
    container_name: mongo_produit
    ports:
      - "27017:27017"
    networks:
      - api_network
    volumes:
      - mongodb_produit:/data/db
    develop:
      watch:
        - path: ./micro_produits/
          target: /app/
          action: sync
        - path: ./micro_produits/package.json
          action: rebuild  

networks:
  api_network:
    driver: bridge

volumes:
  mongodb_auth:
  mongodb_produit:
    
